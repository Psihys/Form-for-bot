services:

  certboot:
    image: itzg/openssl-ubuntu
    volumes:
      - ./certs:/certs
    env_file:
      - .env
    command: ${CERT_GEN_COMMAND}

  frontend-build:
    image: node:20
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./dist:/app/dist
    environment:
      - VITE_ARTICLES_URL=${VITE_ARTICLES_URL}
      - VITE_USERS_URL=${VITE_USERS_URL}
    env_file:
      - .env
    command: npm run build:all

  web:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./frontend/src:/usr/share/nginx/html:ro
    depends_on:
      - python-app
      - php-app

  python-app:
    build:
      context: ./python-app
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./python-app:/app
    depends_on:
      - mysql

  php-app:
    image: webdevops/php-apache:7.4
    ports:
      - "8080:80"
    environment:
      - WEB_DOCUMENT_ROOT=/app
      - DB_HOST=mysql
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    env_file:
      - .env
    volumes:
      - ./php-app:/app
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d

volumes:
  mysql-data:
