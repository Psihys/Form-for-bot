services:

  certboot:
    image: itzg/openssl-ubuntu
    volumes:
      - ./certs:/certs
    env_file:
      - .env
    command: ${CERT_GEN_COMMAND}

  frontend-build:
    image: node:20
    working_dir: /app
    volumes:
      - ./frontend:/app
      - ./dist:/app/dist
    env_file:
      - .env
    command: >
      sh -c "npm install && npm run build:all"

  web:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./dist:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/ssl/certs:ro
    depends_on:
      - frontend-build
      - python-app
      - php-app

  python-app:
    build:
      context: ./python-app
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./python-app:/app
    depends_on:
      - mysql

  php-app:
    image: webdevops/php-apache:7.4
    ports:
      - "8080:80"
    environment:
      WEB_DOCUMENT_ROOT: /app
      DB_HOST: mysql
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
    volumes:
      - ./php-app:/app
    depends_on:
      - mysql

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d

volumes:
  mysql-data:
